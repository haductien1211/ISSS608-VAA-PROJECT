[
  {
    "objectID": "Prototype/Prototype.html",
    "href": "Prototype/Prototype.html",
    "title": "Prototype",
    "section": "",
    "text": "The data used for this part would be the mc3.json file download from the VAST MC3 website"
  },
  {
    "objectID": "Prototype/Prototype.html#loading-and-launching-of-r-packages",
    "href": "Prototype/Prototype.html#loading-and-launching-of-r-packages",
    "title": "Prototype",
    "section": "1. Loading and launching of R Packages",
    "text": "1. Loading and launching of R Packages\nBelow is a list of R Packages we are planning to use for this portion and for exploration\n\nplotly for creating interactive web-based graphs via the open source JavaScript.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\njsonlite JSON parser and generator optimized for statistical data and the web.\nigraph for creating and manipulating graphs and analyzing networks.\ntidygraph provides a tidy framework for all things relational (networks/graphs, trees, etc.)\nggraph an extension of the ggplot2 API tailored to graph visualizations and provides the same flexible approach to building up plots layer by layer.\nvisNetwork for network visualization.\nggforce collection of mainly new stats and geoms for composing specialised plots\nskimr provides summary statistics about variables in data frames, tibbles, data tables and vectors.\ntidyverse an opinionated collection of R packages designed for data science.\n\n\npacman::p_load(plotly, DT, jsonlite, igraph, \n               tidygraph, ggraph, visNetwork,\n               ggforce, skimr, tidyverse)"
  },
  {
    "objectID": "Prototype/Prototype.html#importing-the-data",
    "href": "Prototype/Prototype.html#importing-the-data",
    "title": "Prototype",
    "section": "2. Importing the data",
    "text": "2. Importing the data\nImport the data from mc3.json file using the fromJSON() function\n\nmc3_data &lt;- fromJSON(\"data/mc3.json\")"
  },
  {
    "objectID": "Prototype/Prototype.html#quick-look-at-the-mc3-data",
    "href": "Prototype/Prototype.html#quick-look-at-the-mc3-data",
    "title": "Prototype",
    "section": "1. Quick look at the mc3 data",
    "text": "1. Quick look at the mc3 data\n\nglimpse(mc3_data)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 60520 obs. of  15 variables:\n  ..$ type             : chr [1:60520] \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" ...\n  ..$ country          : chr [1:60520] \"Uziland\" \"Mawalara\" \"Uzifrica\" \"Islavaragon\" ...\n  ..$ ProductServices  : chr [1:60520] \"Unknown\" \"Furniture and home accessories\" \"Food products\" \"Unknown\" ...\n  ..$ PointOfContact   : chr [1:60520] \"Rebecca Lewis\" \"Michael Lopez\" \"Steven Robertson\" \"Anthony Wyatt\" ...\n  ..$ HeadOfOrg        : chr [1:60520] \"Émilie-Susan Benoit\" \"Honoré Lemoine\" \"Jules Labbé\" \"Dr. Víctor Hurtado\" ...\n  ..$ founding_date    : chr [1:60520] \"1954-04-24T00:00:00\" \"2009-06-12T00:00:00\" \"2029-12-15T00:00:00\" \"1972-02-16T00:00:00\" ...\n  ..$ revenue          : num [1:60520] 5995 71767 0 0 4747 ...\n  ..$ TradeDescription : chr [1:60520] \"Unknown\" \"Abbott-Gomez is a leading manufacturer and supplier of high-quality furniture and home accessories, catering to\"| __truncated__ \"Abbott-Harrison is a leading manufacturer of high-quality food products, including baked goods, snacks, and bev\"| __truncated__ \"Unknown\" ...\n  ..$ _last_edited_by  : chr [1:60520] \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:60520] \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:60520] \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ id               : chr [1:60520] \"Abbott, Mcbride and Edwards\" \"Abbott-Gomez\" \"Abbott-Harrison\" \"Abbott-Ibarra\" ...\n  ..$ dob              : chr [1:60520] NA NA NA NA ...\n $ links     :'data.frame': 75817 obs. of  11 variables:\n  ..$ start_date       : chr [1:75817] \"2016-10-29T00:00:00\" \"2035-06-03T00:00:00\" \"2028-11-20T00:00:00\" \"2024-09-04T00:00:00\" ...\n  ..$ type             : chr [1:75817] \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" ...\n  ..$ _last_edited_by  : chr [1:75817] \"Pelagia Alethea Mordoch\" \"Niklaus Oberon\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:75817] \"Existing Corporate Structure Data\" \"Oceanus Corporations Monthly - Jun '35\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:75817] \"Automatic Import\" \"Manual Entry\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ source           : chr [1:75817] \"Avery Inc\" \"Berger-Hayes\" \"Bowers Group\" \"Bowman-Howe\" ...\n  ..$ target           : chr [1:75817] \"Allen, Nichols and Thompson\" \"Jensen, Morris and Downs\" \"Barnett Inc\" \"Bennett Ltd\" ...\n  ..$ key              : int [1:75817] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ end_date         : chr [1:75817] NA NA NA NA ...\n\n\nThe main data in this mc3.json file includes 2 data frame nodes and links, hence we will further breakdown and review the data in these 2 data frames."
  },
  {
    "objectID": "Prototype/Prototype.html#dataframe-nodes",
    "href": "Prototype/Prototype.html#dataframe-nodes",
    "title": "Prototype",
    "section": "2. Dataframe nodes",
    "text": "2. Dataframe nodes\nFirst we import this nodes data using as_tibble() function and have a quick glimpse() at the data itself, let call this data mc3_nodes_raw\nNodes\n\n\nShow the code\nmc3_nodes_raw &lt;- as_tibble(mc3_data$nodes) %&gt;%\n  distinct()\n\nglimpse(mc3_nodes_raw)\n\n\nRows: 60,520\nColumns: 15\n$ type                &lt;chr&gt; \"Entity.Organization.Company\", \"Entity.Organizatio…\n$ country             &lt;chr&gt; \"Uziland\", \"Mawalara\", \"Uzifrica\", \"Islavaragon\", …\n$ ProductServices     &lt;chr&gt; \"Unknown\", \"Furniture and home accessories\", \"Food…\n$ PointOfContact      &lt;chr&gt; \"Rebecca Lewis\", \"Michael Lopez\", \"Steven Robertso…\n$ HeadOfOrg           &lt;chr&gt; \"Émilie-Susan Benoit\", \"Honoré Lemoine\", \"Jules La…\n$ founding_date       &lt;chr&gt; \"1954-04-24T00:00:00\", \"2009-06-12T00:00:00\", \"202…\n$ revenue             &lt;dbl&gt; 5994.73, 71766.67, 0.00, 0.00, 4746.67, 46566.67, …\n$ TradeDescription    &lt;chr&gt; \"Unknown\", \"Abbott-Gomez is a leading manufacturer…\n$ `_last_edited_by`   &lt;chr&gt; \"Pelagia Alethea Mordoch\", \"Pelagia Alethea Mordoc…\n$ `_last_edited_date` &lt;chr&gt; \"2035-01-01T00:00:00\", \"2035-01-01T00:00:00\", \"203…\n$ `_date_added`       &lt;chr&gt; \"2035-01-01T00:00:00\", \"2035-01-01T00:00:00\", \"203…\n$ `_raw_source`       &lt;chr&gt; \"Existing Corporate Structure Data\", \"Existing Cor…\n$ `_algorithm`        &lt;chr&gt; \"Automatic Import\", \"Automatic Import\", \"Automatic…\n$ id                  &lt;chr&gt; \"Abbott, Mcbride and Edwards\", \"Abbott-Gomez\", \"Ab…\n$ dob                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\nmc3_nodes_raw have 15 columns but many of them seems to be of no use from a data analysis perspective of this portion such as TradeDescription, _last_edited_by, _last_edited_date, _date_added, _raw_source, _algorithm, dob. In addition, some data column seems to be in the wrong format such as founding_date which supposed to be in datetime instead of character\nTherefore, we will select from the raw file, columns that we think maybe of use for the data analysis and fix the issue with wrong data format using the code below and call the new data mc3_nodes,we also rename the type to nodes_type instead since both the nodes and links dataframes seems to have type as one of the column\n\n\nShow the code\nmc3_nodes &lt;- mc3_nodes_raw %&gt;%\n  mutate(founding_date = as.Date(founding_date),\n         country = as.character(country),\n         id = as.character(id),\n         ProductServices = as.character(ProductServices),\n         revenue = as.numeric(as.character(revenue)),\n         type = as.character(type),\n         HeadOfOrg = as.character(HeadOfOrg),\n         PointOfContact = as.character(PointOfContact)) %&gt;%\n  select(id, \n         founding_date, \n         country, \n         type, \n         revenue, \n         ProductServices, \n         HeadOfOrg,\n         PointOfContact) %&gt;%\n  rename(nodes_type = type)\n\nglimpse(mc3_nodes)\n\n\nRows: 60,520\nColumns: 8\n$ id              &lt;chr&gt; \"Abbott, Mcbride and Edwards\", \"Abbott-Gomez\", \"Abbott…\n$ founding_date   &lt;date&gt; 1954-04-24, 2009-06-12, 2029-12-15, 1972-02-16, 1954-…\n$ country         &lt;chr&gt; \"Uziland\", \"Mawalara\", \"Uzifrica\", \"Islavaragon\", \"Oce…\n$ nodes_type      &lt;chr&gt; \"Entity.Organization.Company\", \"Entity.Organization.Co…\n$ revenue         &lt;dbl&gt; 5994.73, 71766.67, 0.00, 0.00, 4746.67, 46566.67, 1696…\n$ ProductServices &lt;chr&gt; \"Unknown\", \"Furniture and home accessories\", \"Food pro…\n$ HeadOfOrg       &lt;chr&gt; \"Émilie-Susan Benoit\", \"Honoré Lemoine\", \"Jules Labbé\"…\n$ PointOfContact  &lt;chr&gt; \"Rebecca Lewis\", \"Michael Lopez\", \"Steven Robertson\", …\n\n\nThe founding_date is now in the correct format"
  },
  {
    "objectID": "Prototype/Prototype.html#dataframe-links",
    "href": "Prototype/Prototype.html#dataframe-links",
    "title": "Prototype",
    "section": "3. Dataframe links",
    "text": "3. Dataframe links\nFirst we import this nodes data using as_tibble() function and have a quick glimpse() at the data itself, let call this data mc3_edges_raw\n\n\nShow the code\nmc3_edges_raw &lt;- as_tibble(mc3_data$links) %&gt;%\n  distinct()\n\nglimpse(mc3_edges_raw)\n\n\nRows: 75,817\nColumns: 11\n$ start_date          &lt;chr&gt; \"2016-10-29T00:00:00\", \"2035-06-03T00:00:00\", \"202…\n$ type                &lt;chr&gt; \"Event.Owns.Shareholdership\", \"Event.Owns.Sharehol…\n$ `_last_edited_by`   &lt;chr&gt; \"Pelagia Alethea Mordoch\", \"Niklaus Oberon\", \"Pela…\n$ `_last_edited_date` &lt;chr&gt; \"2035-01-01T00:00:00\", \"2035-07-15T00:00:00\", \"203…\n$ `_date_added`       &lt;chr&gt; \"2035-01-01T00:00:00\", \"2035-07-15T00:00:00\", \"203…\n$ `_raw_source`       &lt;chr&gt; \"Existing Corporate Structure Data\", \"Oceanus Corp…\n$ `_algorithm`        &lt;chr&gt; \"Automatic Import\", \"Manual Entry\", \"Automatic Imp…\n$ source              &lt;chr&gt; \"Avery Inc\", \"Berger-Hayes\", \"Bowers Group\", \"Bowm…\n$ target              &lt;chr&gt; \"Allen, Nichols and Thompson\", \"Jensen, Morris and…\n$ key                 &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ end_date            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\nmc3_edges_raw is also having the same prolem as mc3_nodes_raw of having 1 columns but many of them seems to be of no use from a data analysis perspective of this portion such as _last_edited_by, _last_edited_date, _date_added, _raw_source, _algorithm, key. In addition, some data column seems to be in the wrong format such as start_date and end_date which supposed to be in datetime instead of character\nTherefore, we will select from the raw file, columns that we think maybe of use for the data analysis and fix the issue with wrong data format using the code below and call the new data mc3_edges\n\n\nShow the code\nmc3_edges &lt;- mc3_edges_raw %&gt;%\n  select(source, \n         target, \n         type, \n         start_date, \n         end_date) %&gt;%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type),\n         start_date = as.Date(start_date),\n         end_date = as.Date(end_date)) \n\nglimpse(mc3_edges)\n\n\nRows: 75,817\nColumns: 5\n$ source     &lt;chr&gt; \"Avery Inc\", \"Berger-Hayes\", \"Bowers Group\", \"Bowman-Howe\",…\n$ target     &lt;chr&gt; \"Allen, Nichols and Thompson\", \"Jensen, Morris and Downs\", …\n$ type       &lt;chr&gt; \"Event.Owns.Shareholdership\", \"Event.Owns.Shareholdership\",…\n$ start_date &lt;date&gt; 2016-10-29, 2035-06-03, 2028-11-20, 2024-09-04, 2034-11-12…\n$ end_date   &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\nThe start_date and end_date are now in the correct format"
  },
  {
    "objectID": "Prototype/Prototype.html#number-of-organization-over-the-year.",
    "href": "Prototype/Prototype.html#number-of-organization-over-the-year.",
    "title": "Prototype",
    "section": "1. Number of Organization over the year.",
    "text": "1. Number of Organization over the year.\nFor this Analysis and visualization we want to create a time series line graph of how many organization were founded each year over the years, to find if there any trend or suspicious changes in number of Organization over the years.\nLet us look at the different type that the mc3_nodes data have\n\n\nShow the code\nunique(mc3_nodes$nodes_type)\n\n\n[1] \"Entity.Organization.Company\"         \n[2] \"Entity.Organization.LogisticsCompany\"\n[3] \"Entity.Organization.FishingCompany\"  \n[4] \"Entity.Organization.FinancialCompany\"\n[5] \"Entity.Organization.NewsCompany\"     \n[6] \"Entity.Organization.NGO\"             \n[7] \"Entity.Person\"                       \n[8] \"Entity.Person.CEO\"                   \n\n\nThere seems to be multiple type including Organization and Person, for the purpose of this analysis, we will be focusing on Organization. Therefore, we will filter the data to Organization. In addition, since the duration of founding_date is between 1945 to 2035 (70 years of data), we will create another column called founding_year to breakdown the date to year instead\n\n\nShow the code\nmc3_nodes_Organization &lt;- mc3_nodes %&gt;%\n  mutate(founding_year = format(founding_date, format=\"%Y\")) %&gt;%\n  filter(str_like(nodes_type, \"%Entity.Organization%\"))\nglimpse(mc3_nodes_Organization)\n\n\nRows: 8,871\nColumns: 9\n$ id              &lt;chr&gt; \"Abbott, Mcbride and Edwards\", \"Abbott-Gomez\", \"Abbott…\n$ founding_date   &lt;date&gt; 1954-04-24, 2009-06-12, 2029-12-15, 1972-02-16, 1954-…\n$ country         &lt;chr&gt; \"Uziland\", \"Mawalara\", \"Uzifrica\", \"Islavaragon\", \"Oce…\n$ nodes_type      &lt;chr&gt; \"Entity.Organization.Company\", \"Entity.Organization.Co…\n$ revenue         &lt;dbl&gt; 5994.73, 71766.67, 0.00, 0.00, 4746.67, 46566.67, 1696…\n$ ProductServices &lt;chr&gt; \"Unknown\", \"Furniture and home accessories\", \"Food pro…\n$ HeadOfOrg       &lt;chr&gt; \"Émilie-Susan Benoit\", \"Honoré Lemoine\", \"Jules Labbé\"…\n$ PointOfContact  &lt;chr&gt; \"Rebecca Lewis\", \"Michael Lopez\", \"Steven Robertson\", …\n$ founding_year   &lt;chr&gt; \"1954\", \"2009\", \"2029\", \"1972\", \"1954\", \"2031\", \"2007\"…\n\n\nNext we would want to count the number of company founded per year using the code below under Organization_historical_year\n\n\nShow the code\nOrganization_historical_year &lt;- mc3_nodes_Organization %&gt;%\n  group_by(`founding_year`, `nodes_type`) %&gt;%\n  summarise(count = n())\n\n\nNext we will pivot_wider() the data so each different Organization counts would be in its own columns, this is for the purpose of plotting the graph later since we want to show them in the same plot as well as being able to select the specific Organization viewers want to choose. In addition, since we want to have a data table later showing the raw data we will also renaming the column to a more user friendly name and then sort the full table starting with the earliest year. This would create Organization_historical_year_select\n\n\nShow the code\nOrganization_historical_year_select &lt;- Organization_historical_year %&gt;%\n  select(founding_year, nodes_type, count) %&gt;%\n  pivot_wider(names_from = nodes_type, values_from = count) %&gt;%\n  rename(`Founding Year` = founding_year,\n         `Company` = Entity.Organization.Company,\n         `Fishing Company` = Entity.Organization.FishingCompany,\n         `Logistics Company` = Entity.Organization.LogisticsCompany,\n         `Financial Company` = Entity.Organization.FinancialCompany,\n         `News Company` = Entity.Organization.NewsCompany,\n         `NGO` = Entity.Organization.NGO)\n\nOrganization_historical_year_select &lt;- \n  Organization_historical_year_select[\n    order(Organization_historical_year_select$`Founding Year`),]\n\n\nWith that done, we would showcase final data table and plot the interactive time series graph with a time slider\n\n\nShow the code\ndatatable(Organization_historical_year_select, \n              filter = 'top', \n              options = list(pageLength = 10, \n                             autoWidth = TRUE))\n\n\n\n\n\n\nShow the code\nplot_ly(as.data.frame(Organization_historical_year_select),\n          x = ~`Founding Year`,\n          y = ~`Company`,\n          name = \"Company\",\n          type = 'scatter',\n          mode = 'lines+markers',\n          text = ~paste(\"Year: \", `Founding Year`, \n                        \"&lt;br&gt;Founded: \", Company),\n          hoverinfo = 'text') %&gt;%\n  add_trace(y = ~`Fishing Company`, \n            name = 'Fishing Company', \n            mode = 'lines+markers',\n            text = ~paste(\"Year: \", `Founding Year`,\n                          \"&lt;br&gt;Founded: \", `Fishing Company`),\n            hoverinfo = 'text') %&gt;%\n  add_trace(y = ~`Logistics Company`, \n            name = 'Logistics Company', \n            mode = 'lines+markers',\n            text = ~paste(\"Year: \", `Founding Year`,\n                          \"&lt;br&gt;Founded: \", `Logistics Company`),\n            hoverinfo = 'text') %&gt;%\n  add_trace(y = ~`Financial Company`, \n            name = 'Financial Company', \n            mode = 'lines+markers',\n            text = ~paste(\"Year: \", `Founding Year`,\n                          \"&lt;br&gt;Founded: \", `Financial Company`),\n            hoverinfo = 'text') %&gt;%\n  add_trace(y = ~`News Company`, \n            name = 'News Company', \n            mode = 'lines+markers',\n            text = ~paste(\"Year: \", `Founding Year`,\n                          \"&lt;br&gt;Founded: \", `News Company`),\n            hoverinfo = 'text') %&gt;%\n  add_trace(y = ~`NGO`, \n            name = 'NGO', \n            mode = 'lines+markers',\n            text = ~paste(\"Year: \", `Founding Year`,\n                          \"&lt;br&gt;Founded: \", `NGO`),\n            hoverinfo = 'text') %&gt;%\n  layout(legend = list(orientation = 'h'),\n         xaxis = list(title = \"Founding Year\", \n                      rangeslider = list(visible = TRUE, \n                                         thickness = 0.03)),\n         yaxis = list(title = \"Count\"))\n\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nThere seems to be a spike of number of Company founded between 2034 and 2035, the number of Fishing Company has a spike in 2031 but has been since on a steady decline ever since."
  },
  {
    "objectID": "Prototype/Prototype.html#beneficial-ownership-data-analysis-and-visualization",
    "href": "Prototype/Prototype.html#beneficial-ownership-data-analysis-and-visualization",
    "title": "Prototype",
    "section": "2. Beneficial Ownership data analysis and Visualization",
    "text": "2. Beneficial Ownership data analysis and Visualization\nLet looks at the different of relationship type that the mc3_edges table has\n\n\nShow the code\nunique(mc3_edges$type)\n\n\n[1] \"Event.Owns.Shareholdership\"      \"Event.Owns.BeneficialOwnership\" \n[3] \"Event.WorksFor\"                  \"Relationship.FamilyRelationship\"\n\n\nThere seems to be 4 type of relationship, for this part we would be focusing more on the Beneficial Ownership relationship. First thing first, as previously seen there seems to be 2 columns that represent the entity relation either source or target. We are curious to see what are the type of the entity for each of these source and target hence we would use the mc3_nodes to join with mc3_edges table to find out the nature of these source or target\n\n\nShow the code\nnodes_type &lt;- mc3_nodes %&gt;%\n  select(id, nodes_type)\n\nmc3_edges &lt;- mc3_edges %&gt;%\n  left_join(nodes_type, by = c(\"source\" = \"id\")) %&gt;%\n  rename(nodes_type_source = nodes_type) %&gt;%\n  left_join(nodes_type, by = c(\"target\" = \"id\")) %&gt;%\n  rename(nodes_type_target = nodes_type)\n\n\nLet us check the data generated\n\n\nShow the code\nmc3_edges %&gt;%\n  filter(type == \"Event.Owns.BeneficialOwnership\") %&gt;%\n  head()\n\n\n# A tibble: 6 × 7\n  source  target type  start_date end_date nodes_type_source nodes_type_target  \n  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;date&gt;     &lt;date&gt;   &lt;chr&gt;             &lt;chr&gt;              \n1 Laura … Brigg… Even… 2018-05-10 NA       Entity.Person     Entity.Organizatio…\n2 Jillia… Brigg… Even… 2013-11-30 NA       Entity.Person     Entity.Organizatio…\n3 Anna B… Brigg… Even… 2012-05-04 NA       Entity.Person     Entity.Organizatio…\n4 Dawn K… Brigg… Even… 2007-03-16 NA       Entity.Person     Entity.Organizatio…\n5 Dawn K… Flemi… Even… 2016-09-28 NA       Entity.Person     Entity.Organizatio…\n6 Elizab… Brigg… Even… 2011-11-28 NA       Entity.Person     Entity.Organizatio…\n\n\nInterestingly, it seems like source are the entity that has the type relationship with the target, on the Beneficial Ownership context, source are the owners (specifically person or individual) and target is the one being owned (specifically Organization).\nWith the understanding above we want to find out want to know how many in total a source own a target and how many source (owners) a target have over the year. Let us start with the first part\n\nHow many in total a source own a target over the year\nFor this part we will first filter the data to Event.Owns.BeneficialOwnership then do a group_by() of start_date and source then count the number of row creating BO_indv_count. Afteward, we will group_by() again using source and sum the BO_indv_count creating the cummulative column BO_indv_total\n\n\nShow the code\nedges_BO_indv_count &lt;- mc3_edges %&gt;%\n  filter(type == \"Event.Owns.BeneficialOwnership\") %&gt;%\n  group_by(start_date, source) %&gt;%  \n  summarise(BO_indv_count = n())%&gt;%\n  group_by(source) %&gt;%\n  mutate(BO_indv_total = cumsum(BO_indv_count)) %&gt;%\n  ungroup()\n\n\nLet see how many unique source there is in the table\n\nn_distinct(edges_BO_indv_count$source)\n\n[1] 16231\n\n\n16231 is quite a large number, hence we will reduce this number by create a list of Owner that own 10 or more target using the code below\n\n\nShow the code\nOwner_list &lt;- \n  edges_BO_indv_count[\n    order(edges_BO_indv_count$BO_indv_total,\n          decreasing = T),] %&gt;%\n  filter(BO_indv_total&gt;=10) %&gt;%\n  select(source) %&gt;%\n  distinct()\n\n\nWhat left now is to plot the graph showing the Individual total Beneficial Ownership over time\n\n\nShow the code\nBO_indv_count_table &lt;- edges_BO_indv_count %&gt;%\n  rename(`Start Date` = start_date,\n         `Individual` = source,\n         `Ownership at curent date` = BO_indv_count,\n         `Total Ownership at curent date` = BO_indv_total)\n  \ndatatable(BO_indv_count_table, \n              filter = 'top', \n              options = list(pageLength = 10, \n                             autoWidth = TRUE))\n\n\n\n\n\n\nShow the code\nfig &lt;- edges_BO_indv_count %&gt;%\n  select(start_date, source, BO_indv_total) %&gt;%\n  filter(source %in% Owner_list$source)%&gt;%\n  plot_ly(x = ~start_date,\n          y = ~BO_indv_total,\n          type = 'scatter',\n          mode = 'lines+markers',\n          text = ~paste(\"Day: \", start_date, \n                        \"&lt;br&gt;Own: \", BO_indv_total),\n          hoverinfo = 'text',\n          fill = 'tozeroy',\n          transforms = list(\n            list(\n              type = 'filter',\n              target = ~source,\n              operation = '=',\n              value = unique(Owner_list$source)[1]))) %&gt;%\n  layout(title = 'Individual total Beneficial Ownership over time',\n         xaxis = list(title = \"Time\",\n                      rangeslider = list(visible = TRUE,\n                                         thickness = 0.03)),\n         yaxis = list(title = \"Count\"),\n         updatemenus = list(\n           list(type = 'dropdown',\n                active = 0,\n                buttons = list(\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[1]),\n                       label = unique(Owner_list$source)[1]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[2]),\n                       label = unique(Owner_list$source)[2]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[3]),\n                       label = unique(Owner_list$source)[3]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[4]),\n                       label = unique(Owner_list$source)[4]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[5]),\n                       label = unique(Owner_list$source)[5]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[6]),\n                       label = unique(Owner_list$source)[6]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[7]),\n                       label = unique(Owner_list$source)[7]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[8]),\n                       label = unique(Owner_list$source)[8]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[9]),\n                       label = unique(Owner_list$source)[9]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[10]),\n                       label = unique(Owner_list$source)[10]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[11]),\n                       label = unique(Owner_list$source)[11]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[12]),\n                       label = unique(Owner_list$source)[12]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[13]),\n                       label = unique(Owner_list$source)[13]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[14]),\n                       label = unique(Owner_list$source)[14]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[15]),\n                       label = unique(Owner_list$source)[15]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[16]),\n                       label = unique(Owner_list$source)[16]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[17]),\n                       label = unique(Owner_list$source)[17]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[18]),\n                       label = unique(Owner_list$source)[18]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[19]),\n                       label = unique(Owner_list$source)[19]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[20]),\n                       label = unique(Owner_list$source)[20]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[21]),\n                       label = unique(Owner_list$source)[21]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[22]),\n                       label = unique(Owner_list$source)[22]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[23]),\n                       label = unique(Owner_list$source)[23]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[24]),\n                       label = unique(Owner_list$source)[24]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[25]),\n                       label = unique(Owner_list$source)[25]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[26]),\n                       label = unique(Owner_list$source)[26]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[27]),\n                       label = unique(Owner_list$source)[27]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[28]),\n                       label = unique(Owner_list$source)[28]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[29]),\n                       label = unique(Owner_list$source)[29]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[30]),\n                       label = unique(Owner_list$source)[30]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[31]),\n                       label = unique(Owner_list$source)[31]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[32]),\n                       label = unique(Owner_list$source)[32]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[33]),\n                       label = unique(Owner_list$source)[33]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[34]),\n                       label = unique(Owner_list$source)[34]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[35]),\n                       label = unique(Owner_list$source)[35]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[36]),\n                       label = unique(Owner_list$source)[36]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Owner_list$source)[37]),\n                       label = unique(Owner_list$source)[37])\n                  )\n                )\n              )\n            )\n\nfig\n\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nThere seems to be a few individual of interest such as Zachary Taylor or Breanna Price who suddenly start owning a significant amount of entities between 2033 and 2034 but then slow down their activities in 2035\n\n\n\n\nHow many in total target owned by source over the year\nSame as before we will go through the data creation steps\n\n\nShow the code\nBO_owners_count &lt;- mc3_edges %&gt;%\n  filter(type == \"Event.Owns.BeneficialOwnership\") %&gt;%\n  group_by(start_date, target) %&gt;%  \n  summarise(BeneficialOwnership_count = n())%&gt;%\n  group_by(target) %&gt;%\n  mutate(BeneficialOwnership_total = cumsum(BeneficialOwnership_count)) %&gt;%\n  ungroup()\n\n\nCompany that has 35 or more source using the code below\n\n\nShow the code\nCompany_list &lt;- \n  BO_owners_count[\n    order(BO_owners_count$BeneficialOwnership_total,\n          decreasing = T),] %&gt;%\n  filter(BeneficialOwnership_total&gt;=35) %&gt;%\n  select(target) %&gt;%\n  distinct()\n\n\nAnd finally plotting\n\n\nShow the code\nBO_owners_count_table &lt;- BO_owners_count %&gt;%\n  rename(`Start Date` = start_date,\n         `Organization` = target,\n         `New owners at curent date` = BeneficialOwnership_count,\n         `Total owners at curent date` = BeneficialOwnership_total)\n  \ndatatable(BO_owners_count_table, \n              filter = 'top', \n              options = list(pageLength = 10, \n                             autoWidth = TRUE))\n\n\n\n\n\n\nShow the code\nfig1 &lt;- BO_owners_count %&gt;%\n  select(start_date, target, BeneficialOwnership_total) %&gt;%\n  filter(target %in% Company_list$target)%&gt;%\n  plot_ly(x = ~start_date,\n          y = ~BeneficialOwnership_total,\n          type = 'scatter',\n          mode = 'lines+markers',\n          text = ~paste(\"Day: \", start_date, \n                        \"&lt;br&gt;Owner: \", BeneficialOwnership_total),\n          hoverinfo = 'text',\n          fill = 'tozeroy',\n          transforms = list(\n            list(\n              type = 'filter',\n              target = ~target,\n              operation = '=',\n              value = unique(Company_list$target)[1]))) %&gt;%\n  layout(title = 'Company total number of Beneficial Owners over time',\n         xaxis = list(title = \"Time\",\n                      rangeslider = list(visible = TRUE,\n                                         thickness = 0.03)),\n         yaxis = list(title = \"Count\"),\n         updatemenus = list(\n           list(type = 'dropdown',\n                active = 0,\n                buttons = list(\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[1]),\n                       label = unique(Company_list$target)[1]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[2]),\n                       label = unique(Company_list$target)[2]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[3]),\n                       label = unique(Company_list$target)[3]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[4]),\n                       label = unique(Company_list$target)[4]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[5]),\n                       label = unique(Company_list$target)[5]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[6]),\n                       label = unique(Company_list$target)[6]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[7]),\n                       label = unique(Company_list$target)[7]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[8]),\n                       label = unique(Company_list$target)[8]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[9]),\n                       label = unique(Company_list$target)[9]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[10]),\n                       label = unique(Company_list$target)[10]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[11]),\n                       label = unique(Company_list$target)[11]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[12]),\n                       label = unique(Company_list$target)[12]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[13]),\n                       label = unique(Company_list$target)[13]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[14]),\n                       label = unique(Company_list$target)[14]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[15]),\n                       label = unique(Company_list$target)[15]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[16]),\n                       label = unique(Company_list$target)[16]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[17]),\n                       label = unique(Company_list$target)[17]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[18]),\n                       label = unique(Company_list$target)[18]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[19]),\n                       label = unique(Company_list$target)[19]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[20]),\n                       label = unique(Company_list$target)[20]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[21]),\n                       label = unique(Company_list$target)[21]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[22]),\n                       label = unique(Company_list$target)[22]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[23]),\n                       label = unique(Company_list$target)[23]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[24]),\n                       label = unique(Company_list$target)[24]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[25]),\n                       label = unique(Company_list$target)[25]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[26]),\n                       label = unique(Company_list$target)[26]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[27]),\n                       label = unique(Company_list$target)[27]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[28]),\n                       label = unique(Company_list$target)[28]),\n                  list(method = \"restyle\",\n                       args = list(\"transforms[0].value\",\n                                   unique(Company_list$target)[29]),\n                       label = unique(Company_list$target)[29])\n                  )\n                )\n              )\n            )\nfig1\n\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nThere seems to be a few company of interest such as Downs Group who suddenly start having their business under owner ship at a significant rate between 2034 and 2035"
  },
  {
    "objectID": "Prototype/Prototype.html#final-observation-for-task-1-2",
    "href": "Prototype/Prototype.html#final-observation-for-task-1-2",
    "title": "Prototype",
    "section": "3. Final Observation for task 1 & 2",
    "text": "3. Final Observation for task 1 & 2\nTo summarize the observations above\n\n\n\n\n\n\nObservation\n\n\n\n\nThe rate of company founded seems to be stable mostly throughout the year from 1945 to 2025. However, there seems to be a spike of number of Company founded between 2034 and 2035, the number of Fishing Company has a spike in 2031 but has been since on a steady decline ever since.\nThere is around 37 individuals who has Beneficial Ownership in at least 10 companies, the maximum of which is 92. Ouf of these individual there seems to be a few individuals of interest such as Zachary Taylor or Breanna Price who suddenly start owning a significant number of entities between 2033 and 2034 but then slow down their activities in 2035\nThere is around 29 Companies who were own by more than 35 individuals, the maximum of which is 119. There seems to be a few companies of interest such as Downs Group who suddenly start having their business under owner ship at a significant rate between 2034 and 2035\nThe motivation for the increase in activity is not clearly shown in the above visualization but it does show examples of typical and atypical business transactions. A complete version of the Shiny App would hopefully shed some light on this."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "We are Project Group 8: HA Duc Tien, Mohamad Hafez Bin SIDEK, KWOK Pei Shan"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "VAST Challenge 2024 Mini Challenge 3: Temporal Analysis",
    "section": "",
    "text": "Mini-challenge 3 concerns visualizing changes in business relationships within the commercial fishing industry. FishEye wants to understand how companies react to the closure of a competitor caught fishing illegally and how these changes affect influence networks. Design visualizations to show these changes over time and identify companies that may benefit from illegal fishing.\nPlease visit VAST Challenge 2024: Mini-Challenge 3 for more information and to download the data."
  },
  {
    "objectID": "Proposal/Proposal.html",
    "href": "Proposal/Proposal.html",
    "title": "VAST Challenge 2024 Mini-Challenge 3",
    "section": "",
    "text": "1. Overview\nThe Oceanus business ecosystem is dynamic in nature, marked by the continual emergence of startups, mergers, acquisitions, and investments. FishEye International serves as a vigilant overseer of this landscape, meticulously monitoring the activities of commercial fishing operators to uphold the integrity of the region’s marine ecosystem. Through comprehensive analysis of business records, FishEye endeavors to uncover ownership structures, shareholder dynamics, transactional histories, and the core offerings of each entity, culminating in the creation of CatchNet: the Oceanus Knowledge Graph, achieved through a blend of automated processes and manual review.\nRecent events have cast a shadow over Oceanus’s commercial fishing sector, following the discovery of illegal fishing practices by SouthSeafood Express Corp. In response, FishEye has initiated an in-depth exploration to discern the temporal implications of this occurrence on Oceanus’s fishing marketplace. The competitive landscape may witness a variety of reactions, ranging from aggressive maneuvers by industry players seeking to capitalize on voids left by SouthSeafood Express Corp, to a heightened awareness within the industry that unlawful activities will be met with diligent scrutiny and consequential action. This ongoing investigation underscores the significance of FishEye’s role in maintaining the ethical and legal standards of Oceanus’s commercial endeavors.\n\n\n2. Problem and Tasks\nThis is based on the tasks and question from VAST Challenge 2024 Mini Challenge 3 or MC3\nA key element in stopping illegal fishing is holding the people who own nefarious companies accountable. Thus, FishEye is keenly interested in developing visualization tools that work with CatchNet to identify the people who hold influence over business networks. That is especially difficult with varied and changing shareholder and ownership relationships.\n\nFishEye analysts want to better visualize changes in corporate structures over time. Create a visual analytics approach that analysts can use to highlight temporal patterns and changes in corporate structures. Examine the most active people and businesses using visual analytics.\nUsing your visualizations, find and display examples of typical and atypical business transactions (e.g., mergers, acquisitions, etc.). Can you infer the motivations behind changes in their activity?\nDevelop a visual approach to examine inferences. Infer how the influence of a company changes through time. Can you infer ownership or influence that a network may have?\nIdentify the network associated with SouthSeafood Express Corp and visualize how this network and competing businesses change as a result of their illegal fishing behavior. Which companies benefited from SouthSeafood Express Corp legal troubles? Are there other suspicious transactions that may be related to illegal fishing? Provide visual evidence for your conclusions.\n\n\n\n3. Approach\nThe initial approach is to identify any abnormality in the data and perform the necessary data wrangling and cleaning, as well as some initial Data Exploration and Analysis. Afterward, we would move on to address each task in separation\n\nTask 1:\nFor this task, we are planning to do some network graph of corporate network that would change overtime when new event happens. The main visualization techniques are still under further discussion, but the main purpose is to highlight temporal changes to corporate structure based on individual related to these corporate and potentially their familial relation. At the moment, the idea that we have in mind is to have a visualization that look like this with a slider for time representation\n\n\n\nTask 2:\nFor this task, as we are looking at business transactions such as mergers or acquisitions, etc., we are planning to look at the edges which represent Beneficial Ownership or Shareholdership, and also look into the start_date and end_date to examine which business transactions are typical and atypical. At the moment, the idea is to visualize the type of event using the weight of the edges, e.g., Beneficial Ownership may have higher weightage than Shareholdership, and hence appear as a thicker line on the network graph.\n\n\nTask 3:\nFor this task, we are planning to use centrality measures such as betweenness centrality and closeness centrality to measure the influence of a company. The higher the betweenness centrality of a company, the more important the company is in acting as a “bridge” to manage relationships and business transactions between other companies, which suggests that this company has high influence over others as it is highly crucial in facilitating flow of information and/or resources between other companies. Similarly, a company with high closeness centrality suggests that this company has high influence as they are close to many other companies and thus, able to efficiently communicate and spread information quickly.\nAt the moment, the idea is to have a visualization that looks like this, where the bigger the size of a node, the higher the betweenness/ closeness centrality of the company (i.e., the more influence a company has), with perhaps a slider to measure any changes in the influential companies over time.\n\n\nTask 4:\nFor this task, we propose a comprehensive set of techniques aimed at identifying and analyzing the network associated with SouthSeafood Express Corp, visualizing network changes before and after illegal fishing behavior, reviewing revenue and market share changes, and detecting suspicious transactions related to illegal fishing activities.\nFirst, to identify the network associated with SouthSeafood Express Corp, we will employ network graph dendrograms. These dendrograms will help us visualize the entities and relationships directly and indirectly connected to SouthSeafood Express Corp. By filtering the graph to include only relevant nodes and edges, we can highlight key nodes such as shareholders and partner companies, as well as critical edges like ownership and transaction relationships. The primary visualizations for this objective are network graphs, which will depict the entities connected to SouthSeafood Express Corp, and dendrograms, which will present a hierarchical tree structure of the connected entities.\nNext, to visualize network changes before and after illegal fishing behavior, we will continue using network graph dendrograms. By creating dendrograms, we can visualize the hierarchical structure of company connections both before and after the incident. Hierarchical clustering will be used to group connected nodes and visualize their relationships. Nodes not connected to the main structure will be removed for clarity. Relevant visualizations for this objective include side-by-side dendrograms showing the network before and after the incident, and hierarchical cluster diagrams that illustrate the groupings of connected entities.\nIn reviewing revenue and market share changes before and after the incident, we will use revenue analysis and market share visualization techniques. For revenue analysis, bar charts will compare the revenue of companies before and after the incident, highlighting those that experienced significant changes. For market share analysis, pie charts will visualize market share changes among competitor’s post-incident, identifying companies that benefited from the incident. The relevant visualizations here are bar charts for revenue comparison and pie charts for market share distribution before and after the incident. To detect suspicious transactions related to illegal fishing, scatter plot analysis will be employed. Scatter plots will help us analyze transaction data and identify anomalies or spikes in revenue that could indicate suspicious transactions. By plotting revenue against time or other relevant variables, we can highlight unusual patterns or outliers. The visualizations for this objective include scatter plots to show revenue against time or other variables, box plots to identify outliers in revenue data, and histograms to analyze the distribution of revenue values and spot unusual concentrations.\nBy employing these techniques, analysts at FishEye can effectively visualize and understand the impact of SouthSeafood Express Corp’s illegal activities on the network and market share, as well as detect any related suspicious transactions. This comprehensive approach combines network analysis, revenue and market share comparisons, and anomaly detection to provide clear and actionable insights into the dynamics of the Oceanus commercial fishing business community.\n\n\n\n4. Shiny App\nShiny App will tentatively come with interactive Graphs and Network Graph visualization. It will consist of several tabs, showcasing different graphs related to each of the tasks:"
  }
]